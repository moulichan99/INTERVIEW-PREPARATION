solution
-----

#include<stdio.h>
typedef long long l;
l a[10000077];
int main(){
int m,n;
scanf("%d%d",&n,&m);

int i,x,y;
l t;
for(i=0;i<m;i++){
	scanf("%d %d %lld",&x,&y,&t);
  
	a[x] +=t;
	a[y+1]-=t;
}
l ma = 0,sum=0;
for(i=0;i<=n;i++){
	sum+=a[i];
    	if(sum>ma)ma = sum;
}

//printf("%lld\n",ma);
	return 0;
}
ALTERNATE:
#include <bits/stdc++.h>

using namespace std;
long a[400009];

int main() {
    
    int n;
    int m;
    cin >> n >> m;
    vector < pair < int, int > > v;
    
    for(int a0 = 0; a0 < m; a0++) {
    
        int a;
        int b;
        int k;
        cin >> a >> b >> k;
        
        //storing the query
        //this will add k in the prefix sum for index >= a
        v.push_back(make_pair(a, k));
        
        //adding -1*k will remove k from the prefix sum for index > b 
        v.push_back(make_pair(b+1, -1 * k));
    }
    
    long mx = 0, sum = 0;
    
    sort(v.begin(), v.end()); // it should within the range means added up else out of range subtracted
    
    for(int i=0 ; i<2*m; i++) {
    
        sum += v[i].second;
        mx = max(mx, sum);
        
    }
        
    cout<<mx<<endl;
    return 0;
}
///////////////////////////////////////////////////////////////////////
Sample Input

5 3
1 2 100
2 5 100
3 4 100
Sample Output

200
Explanation

After the first update list will be 100 100 0 0 0. 
After the second update list will be 100 200 100 100 100. 
After the third update list will be 100 200 200 200 100. 
The required answer will be 200.
