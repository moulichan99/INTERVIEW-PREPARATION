

Given an array A of N integers. The task is to find a peak element in it.
An array element is peak if it is not smaller than its neighbours. For corner elements, we need to consider only one neighbour.

Note: There may be multiple peak element possible, in that case you may return any valid index.
Example:
Input:
2
3
1 2 3
2
3 4
Output:
1
1

Explanation:
Testcase 1: In the given array, 3 is the peak element.
Testcase 2: 4 is the peak element.

//////////////////////////////////////////////////////////////////////

int peakElement(int arr[], int n)
{
    int i,count=0;
    if(arr[0]>arr[1])
        return 0;
    for(i=1;i<n-1;i++)
    {
        if(arr[i]>arr[i-1]&&arr[i]>arr[i+1])
            return i;
    }
    if(arr[n-1]>arr[n-2])
        return n-1;
        
       
}
