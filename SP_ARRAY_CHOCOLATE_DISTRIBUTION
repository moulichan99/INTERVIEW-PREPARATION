
Here basically we need to find a subset of size m (number of students) from the Array A 
such that the difference between minimum and maximum value should be minimum along all the possible subsets.

Given input is

3 4 1 9 56 7 9 12
5

Number of students are 5. So, the sub-arrays would be

{1, 3, 4, 7, 9}, {3, 4, 7, 9, 9}, {4, 7, 9, 9, 12}, {7, 9, 9, 12, 15}, ...

So, the second subset will 6 which is the minimum difference among all the sub-arrays. Hence, 6 is the output.





//////////////////////////////////////////////////////////////////
#include <iostream>
#include <bits/stdc++.h>
#include <vector>
using namespace std;

int main() {
	//code
	int t,n,i,k,m;
	cin>>t;
	while(t--)
	{
	    cin>>n;
	    vector<int> v;
	    for(i=0;i<n;i++)
	    {
	        cin>>k;
	        v.push_back(k);
	    }     
	    cin>>m;     
	    sort(v.begin(),v.end());
	    if(m > n)
	        {
	            cout<<"-1\n";
	            continue;
	        }
	    int ans =  9999999;
	    for(int i=0; i<n-m+1;i++)
	    {
	        int temp = v[i+m-1] - v[i];
	        if(temp< ans)
	            ans = temp;
	    }
	    cout<<ans<<endl;
	    
	}
	return 0;
}
