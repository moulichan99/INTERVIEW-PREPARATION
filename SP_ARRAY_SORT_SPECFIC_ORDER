Given an array A of positive integers.
Your task is to sort them in such a way that the first part of the array contains odd numbers sorted in descending order, 
rest portion contains even numbers sorted in ascending order.

Example:
Input:
2
7
1 2 3 5 4 7 10
7
0 4 5 3 7 2 1

Output:
7 5 3 1 2 4 10
7 5 3 1 0 2 4

////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include <iostream>
#include <bits/stdc++.h>
#include <vector> 
using namespace std;

int main() {
	//code
	int t;
	cin>>t;
	while(t--)
	{
	    long int n;
	    cin>>n;
	    long int a[n],i;
	    vector<long int> even,odd;
	    for(i=0;i<n;i++)
	        cin>>a[i];
	    
	    for(i=0;i<n;i++)
	    {
	        if(a[i]%2==0)
	            even.push_back(a[i]);
	        else
	            odd.push_back(a[i]);
	    }
	    sort(even.begin(),even.end());
	    sort(odd.begin(),odd.end(),greater<long int>());
      /*
      We can pass “greater()” function to sort in descending order. 
      This function does comparison in a way that puts greater element before.
	    */
      for(i=0;i<odd.size();i++)
	        cout<<odd[i]<<" ";
	    for(i=0;i<even.size();i++)
	        cout<<even[i]<<" ";
	 cout<<endl;   
	}
	return 0;
}
